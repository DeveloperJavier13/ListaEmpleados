{"ast":null,"code":"import { Empleado } from './empleado.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./servicio-empleados.service\";\nexport class EmpleadosService {\n  constructor(mensaje) {\n    this.mensaje = mensaje;\n    this.empleados = [new Empleado(\"Ricardo\", \"Poxtan\", \"Director\", 10000), new Empleado(\"Javier\", \"González\", \"Jefe\", 9000), new Empleado(\"David\", \"Carrillo\", \"Programador\", 8000), new Empleado(\"Daniel\", \"Farias\", \"Programador\", 8000)];\n  }\n  agregarEmpleadoServicio(empleado) {\n    this.mensaje.muestraMensaje(\"Persona que se va a agregar: \" + \"\\n\" + empleado.nombre + \" \" + empleado.apellido + \"\\n\" + \"Con el salario de: \" + empleado.salario);\n    this.empleados.push(empleado);\n  }\n  encontrarEmpleado(indice) {\n    let empleado = this.empleados[indice];\n    return empleado;\n  }\n  actualizarEmpleado(indice, empleado) {\n    let empleadoMod = this.empleados[indice];\n    empleadoMod.nombre = empleado.nombre;\n    empleadoMod.apellido = empleado.apellido;\n    empleadoMod.cargo = empleado.cargo;\n    empleadoMod.salario = empleado.salario;\n  }\n}\nEmpleadosService.ɵfac = function EmpleadosService_Factory(t) {\n  return new (t || EmpleadosService)(i0.ɵɵinject(i1.ServicioEmpleadosService));\n};\nEmpleadosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmpleadosService,\n  factory: EmpleadosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,kBAAkB;;;AAM3C,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,OAAgC;IAAhC,YAAO,GAAPA,OAAO;IAI3B,cAAS,GAAY,CACnB,IAAIH,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAC,KAAK,CAAC,EACnD,IAAIA,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAC,IAAI,CAAC,EAC/C,IAAIA,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,aAAa,EAAC,IAAI,CAAC,EACrD,IAAIA,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAC,IAAI,CAAC,CACrD;EAPA;EASDI,uBAAuB,CAACC,QAAkB;IACxC,IAAI,CAACF,OAAO,CAACG,cAAc,CAAC,+BAA+B,GAAG,IAAI,GAChED,QAAQ,CAACE,MAAM,GAAG,GAAG,GAAGF,QAAQ,CAACG,QAAQ,GAAG,IAAI,GAAG,qBAAqB,GAAEH,QAAQ,CAACI,OAAO,CAAC;IAC7F,IAAI,CAACC,SAAS,CAACC,IAAI,CAACN,QAAQ,CAAC;EAC/B;EAEAO,iBAAiB,CAACC,MAAa;IAC7B,IAAIR,QAAQ,GAAY,IAAI,CAACK,SAAS,CAACG,MAAM,CAAC;IAC9C,OAAOR,QAAQ;EACjB;EAEAS,kBAAkB,CAACD,MAAa,EAAER,QAAiB;IACjD,IAAIU,WAAW,GAAG,IAAI,CAACL,SAAS,CAACG,MAAM,CAAC;IAExCE,WAAW,CAACR,MAAM,GAAGF,QAAQ,CAACE,MAAM;IACpCQ,WAAW,CAACP,QAAQ,GAAGH,QAAQ,CAACG,QAAQ;IACxCO,WAAW,CAACC,KAAK,GAAGX,QAAQ,CAACW,KAAK;IAClCD,WAAW,CAACN,OAAO,GAAGJ,QAAQ,CAACI,OAAO;EACxC;;AA/BWR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAgB,SAAhBhB,gBAAgB;EAAAiB,YAFf;AAAM","names":["Empleado","EmpleadosService","constructor","mensaje","agregarEmpleadoServicio","empleado","muestraMensaje","nombre","apellido","salario","empleados","push","encontrarEmpleado","indice","actualizarEmpleado","empleadoMod","cargo","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\javie\\OneDrive\\Escritorio\\proyectosGit\\ListaEmpleados\\src\\app\\empleados.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Empleado } from './empleado.model';\nimport { ServicioEmpleadosService } from './servicio-empleados.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadosService {\n\n  constructor(private mensaje:ServicioEmpleadosService) {\n    \n   }\n\n  empleados:Empleado[]=[\n    new Empleado(\"Ricardo\", \"Poxtan\", \"Director\",10000),\n    new Empleado(\"Javier\", \"González\", \"Jefe\",9000),\n    new Empleado(\"David\", \"Carrillo\", \"Programador\",8000),\n    new Empleado(\"Daniel\", \"Farias\", \"Programador\",8000),\n  ];\n\n  agregarEmpleadoServicio(empleado: Empleado){\n    this.mensaje.muestraMensaje(\"Persona que se va a agregar: \" + \"\\n\"\n    + empleado.nombre + \" \" + empleado.apellido + \"\\n\" + \"Con el salario de: \" +empleado.salario);\n    this.empleados.push(empleado);\n  }\n\n  encontrarEmpleado(indice:number){\n    let empleado:Empleado = this.empleados[indice];\n    return empleado\n  }\n\n  actualizarEmpleado(indice:number, empleado:Empleado){\n    let empleadoMod = this.empleados[indice];\n\n    empleadoMod.nombre = empleado.nombre;\n    empleadoMod.apellido = empleado.apellido;\n    empleadoMod.cargo = empleado.cargo;\n    empleadoMod.salario = empleado.salario;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}