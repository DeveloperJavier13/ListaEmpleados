{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class LoginService {\n  constructor(router, cookie) {\n    this.router = router;\n    this.cookie = cookie;\n  }\n  login(email, password) {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      firebase.auth().currentUser?.getIdToken().then(tokens => {\n        this.token = tokens;\n        this.cookie.set('Token', this.token);\n        this.router.navigate(['/']);\n      });\n    });\n  }\n  getIdToken() {\n    return this.cookie.get('Token');\n  }\n  estalogueado() {\n    return this.cookie.get('Token');\n  }\n  logout() {\n    firebase.auth().signOut().then(() => {\n      this.token = \"\";\n      this.cookie.set('Token', this.token);\n      this.router.navigate(['/']);\n      window.location.reload();\n    });\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,OAAOA,QAAQ,MAAM,qBAAqB;AAE1C,OAAO,sBAAsB;;;;AAK7B,OAAM,MAAOC,YAAY;EAErBC,YAAoBC,MAAa,EAAUC,MAAoB;IAA3C,WAAM,GAAND,MAAM;IAAiB,WAAM,GAANC,MAAM;EAAgB;EAIjEC,KAAK,CAACC,KAAY,EAAEC,QAAe;IAC/BP,QAAQ,CAACQ,IAAI,EAAE,CAACC,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI,CAC5DC,QAAQ,IAAG;MACPX,QAAQ,CAACQ,IAAI,EAAE,CAACI,WAAW,EAAEC,UAAU,EAAE,CAACH,IAAI,CAC1CI,MAAM,IAAG;QACL,IAAI,CAACC,KAAK,GAAGD,MAAM;QACnB,IAAI,CAACV,MAAM,CAACY,GAAG,CAAC,OAAO,EAAE,IAAI,CAACD,KAAK,CAAC;QACpC,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC/B,CAAC,CACJ;IACL,CAAC,CACJ;EACL;EAEAJ,UAAU;IACN,OAAO,IAAI,CAACT,MAAM,CAACc,GAAG,CAAC,OAAO,CAAC;EACnC;EAEAC,YAAY;IACR,OAAO,IAAI,CAACf,MAAM,CAACc,GAAG,CAAC,OAAO,CAAC;EACnC;EAEAE,MAAM;IACFpB,QAAQ,CAACQ,IAAI,EAAE,CAACa,OAAO,EAAE,CAACX,IAAI,CAAC,MAAK;MAChC,IAAI,CAACK,KAAK,GAAG,EAAE;MACf,IAAI,CAACX,MAAM,CAACY,GAAG,CAAC,OAAO,EAAE,IAAI,CAACD,KAAK,CAAC;MACpC,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3BK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC5B,CAAC,CAAC;EACN;;AAnCSvB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;AAAA","names":["firebase","LoginService","constructor","router","cookie","login","email","password","auth","signInWithEmailAndPassword","then","response","currentUser","getIdToken","tokens","token","set","navigate","get","estalogueado","logout","signOut","window","location","reload","factory"],"sourceRoot":"","sources":["C:\\Users\\javie\\OneDrive\\Escritorio\\proyectosGit\\ListaEmpleados\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport firebase from \"firebase/compat/app\";\r\n\r\nimport 'firebase/compat/auth'\r\nimport { CookieService } from \"ngx-cookie-service\";\r\n\r\n\r\n@Injectable()\r\nexport class LoginService{\r\n\r\n    constructor(private router:Router, private cookie:CookieService){}\r\n\r\n    token:string;\r\n\r\n    login(email:string, password:string){\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(\r\n            response => {\r\n                firebase.auth().currentUser?.getIdToken().then(\r\n                    tokens => {\r\n                        this.token = tokens;\r\n                        this.cookie.set('Token', this.token);\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                )\r\n            }\r\n        );\r\n    }\r\n    \r\n    getIdToken(){\r\n        return this.cookie.get('Token');\r\n    }\r\n\r\n    estalogueado(){\r\n        return this.cookie.get('Token');\r\n    }\r\n\r\n    logout(){\r\n        firebase.auth().signOut().then(() => {\r\n            this.token = \"\";\r\n            this.cookie.set('Token', this.token);\r\n            this.router.navigate(['/']);\r\n            window.location.reload();\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}