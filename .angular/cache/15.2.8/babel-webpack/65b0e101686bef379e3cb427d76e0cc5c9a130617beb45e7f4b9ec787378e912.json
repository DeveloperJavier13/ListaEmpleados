{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login/login.service\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(httpClient, loginService) {\n      this.httpClient = httpClient;\n      this.loginService = loginService;\n    }\n    cargarEmpleados() {\n      const token = this.loginService.getIdToken();\n      return this.httpClient.get('https://clientes-b0735-default-rtdb.firebaseio.com/datos.json?auth=' + token);\n    }\n    guardarEmpleados(empleados) {\n      const token = this.loginService.getIdToken();\n      this.httpClient.put(\"https://clientes-b0735-default-rtdb.firebaseio.com/datos.json?auth=\" + token, empleados).subscribe(reponse => console.log(\"Se han guardado los registros: \" + reponse), error => console.log(\"Error: \" + error));\n    }\n    actualizarEmpleados(indice, empleado) {\n      const token = this.loginService.getIdToken();\n      let url = \"https://clientes-b0735-default-rtdb.firebaseio.com/datos/\" + indice + \".json?auth=\" + token;\n      this.httpClient.put(url, empleado).subscribe(reponse => console.log(\"Se ha modificado el registro: \" + reponse), error => console.log(\"Error: \" + error));\n    }\n    eliminarEmpleados(indice) {\n      const token = this.loginService.getIdToken();\n      let url = \"https://clientes-b0735-default-rtdb.firebaseio.com/datos/\" + indice + \".json?auth=\" + token;\n      this.httpClient.delete(url).subscribe(reponse => console.log(\"Se ha eliminado el registro: \" + reponse), error => console.log(\"Error: \" + error));\n    }\n  }\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}